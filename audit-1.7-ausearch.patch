diff -up audit-1.6.5/src/ausearch-report.c.ausearch audit-1.6.5/src/ausearch-report.c
--- audit-1.6.5/src/ausearch-report.c.ausearch	2007-12-20 21:02:15.000000000 +0100
+++ audit-1.6.5/src/ausearch-report.c	2008-04-02 18:33:16.000000000 +0200
@@ -36,6 +36,7 @@
 #include <linux/net.h>
 #include <time.h>
 #include <stdlib.h>
+#include <ctype.h>
 #include "libaudit.h"
 #include "ausearch-options.h"
 #include "ausearch-parse.h"
@@ -59,7 +60,7 @@ static void output_raw(llist *l);
 static void output_default(llist *l);
 static void output_interpreted(llist *l);
 static void output_interpreted_node(const lnode *n);
-static void interpret(char *name, char *val, int comma);
+static void interpret(char *name, char *val, int comma, int rtype);
 
 /* The machine based on elf type */
 static int machine = 0;
@@ -287,7 +288,7 @@ no_print:
 		val = ptr;
 		
 		// print interpreted string
-		interpret(name, val, comma);
+		interpret(name, val, comma, n->type);
 	}
 	printf("\n");
 }
@@ -838,13 +839,37 @@ static void print_signals(char *val)
 	printf("%s", strsignal(i));
 }
 
-static void interpret(char *name, char *val, int comma)
+static int is_hex_string(const char *str)
+{
+        while (*str) {
+                if (!isxdigit(*str))
+                        return 0;
+                str++;
+        }
+        return 1;
+}
+
+static void interpret(char *name, char *val, int comma, int rtype)
 {
 	int type;
 
 	while (*name == ' ')
 		name++;
-	type = audit_lookup_type(name);
+
+        /* Do some fixups */
+        if (rtype == AUDIT_EXECVE && name[0] == 'a')
+                type = T_ESCAPED;
+        else if (rtype == AUDIT_AVC && strcmp(name, "saddr") == 0)
+                type = -1;
+        else if (strcmp(name, "acct") == 0) {
+                if (val[0] == '"')
+                        type = T_ESCAPED;
+                else if (is_hex_string(val))
+                        type = T_ESCAPED;
+                else
+                        type = -1;
+        } else
+                type = audit_lookup_type(name);
 
 	switch(type) {
 		case T_UID:
